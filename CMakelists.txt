# ########################################################
# ######## CMAKE BASIC CONFIGURATIONS ####################
# ########################################################
# Set minimum required version
cmake_minimum_required(VERSION 3.10)

# Set the c standard
set(CMAKE_C_STANDARD 90)
set(CMAKE_C_STANDARD_REQUIRED ON)
message(STATUS C_STANDARD: ${CMAKE_C_STANDARD})

# Set the c compiler
set(CMAKE_C_COMPILER "gcc")

# Set the c++ compiler
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
message(STATUS CXX_STANDARD: ${CMAKE_CXX_STANDARD})

# Set the c++ compiler
# set(CMAKE_CXX_COMPILER "gcc++")

# Set debugging configs
set(CMAKE_BUILD_TYPE Debug)

if(CMAKE_COMPILER_IS_GNUCC)
  set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0")
  set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -O0")
endif(CMAKE_COMPILER_IS_GNUCC)

# ########################################################
# ######## CMAKE PROJECT CONFIGURATIONS ##################
# ########################################################
# Set project name
project(xorDLL_TEST VERSION 0.0)

if(EXISTS ../main.c)
  #
  set(MY_SUBDIRS
    ${CMAKE_SOURCE_DIR}/xorDLL
  )
  add_subdirectory(${MY_SUBDIRS})

  #
  add_executable(${PROJECT_NAME} main.c ${src_files})

  #
  set(MY_INCLUDED_DIRS
    xorDLL/
  )
  target_include_directories(${PROJECT_NAME} PRIVATE ${MY_INCLUDED_DIRS})

  # Libraries added
  set(MY_LINKED_LIBS
    xorDLL
  )
  target_link_libraries(${PROJECT_NAME} PRIVATE ${MY_LINKED_LIBS})

else()
  message(ERROR ":main.c not found!")
endif()